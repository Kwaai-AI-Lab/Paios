openapi: 3.0.3
info:
  version: '0.1'
  title: Kwaai pAI-OS API
  description: 'API for pAI-OS admin interfaces (web, app) to backend services.'
  termsOfService: 'https://paios.org'
  contact:
    name: Kwaai
    url: 'https://www.kwaai.ai'
    email: contact@kwaai.ai
  license:
    url: 'https://github.com/pAI-OS/paios/blob/main/LICENSE'
    name: MIT
servers:
  - url: /api/v1
    description: Local instance
paths:
  /abilities:
    get:
      tags:
        - Abilities Management
      summary: Retrieve all abilities
      description: Retrieve the information of all abilities.
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/range'
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ability'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
  '/abilities/{id}':
    get:
      tags:
        - Abilities Management
      summary: Retrieve ability by id
      description: Retrieve the information of the ability with the matching ability ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ability'
      x-stoplight:
        id: dyrvaak9tni3i
    parameters:
      - $ref: '#/components/parameters/abilityId'
  '/abilities/{id}/install':
    post:
      tags:
        - Abilities Management
      summary: Install ability
      description: Installs the ability with the matching ability id to the specified or latest version.
      operationId: backend.api.AbilitiesView.install
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/versionOptional'
      responses:
        '200':
          description: Ability installed
        '400':
          description: Invalid request
        '404':
          description: Ability not found
  '/abilities/{id}/upgrade':
    post:
      tags:
        - Abilities Management
      summary: Upgrade ability
      description: Upgrades the ability with the matching ability id to the specified or latest version.
      operationId: backend.api.AbilitiesView.upgrade
      parameters:
        - $ref: '#/components/parameters/abilityId'
        - $ref: '#/components/parameters/versionOptional'
      responses:
        '200':
          description: Ability upgraded
        '400':
          description: Invalid request
        '404':
          description: Ability not found
  '/abilities/{id}/uninstall':
    post:
      tags:
        - Abilities Management
      summary: Uninstall ability
      description: Uninstalls the ability with the matching ability id.
      operationId: backend.api.AbilitiesView.uninstall
      parameters:
        - $ref: '#/components/parameters/abilityId'
      responses:
        '200':
          description: Ability uninstalled
        '400':
          description: Invalid request
        '404':
          description: Ability not found
  '/abilities/{id}/start':
    post:
      tags:
        - Abilities Management
      summary: Start ability
      description: Starts the ability with the matching ability ID.
      operationId: backend.api.AbilitiesView.start
      responses:
        '200':
          description: OK
      x-stoplight:
        id: oymowererbmk1
    parameters:
      - $ref: '#/components/parameters/abilityId'
  '/abilities/{id}/stop':
    post:
      tags:
        - Abilities Management
      summary: Stop ability
      description: Stops the ability with the matching ability ID.
      operationId: backend.api.AbilitiesView.stop
      responses:
        '200':
          description: OK
      x-stoplight:
        id: rl7akdqs5zokh
    parameters:
      - $ref: '#/components/parameters/abilityId'
  '/abilities/{id}/dependencies/{dependency_id}/download':
    post:
      tags:
        - Abilities Management
      summary: Start download
      description: Downloads an ability's dependency.
      responses:
        '200':
          description: Download started
      x-stoplight:
        id: xngy10ictavd9
    parameters:
      - $ref: '#/components/parameters/abilityId'
      - $ref: '#/components/parameters/dependencyId'
  '/abilities/{id}/dependencies/{dependency_id}/install':
    post:
      tags:
        - Abilities Management
      summary: Start dependency install
      description: Installs an ability's dependency.
      responses:
        '200':
          description: Install started
      x-stoplight:
        id: s0cmunju1qpd7
    parameters:
      - $ref: '#/components/parameters/abilityId'
      - $ref: '#/components/parameters/dependencyId'
  /assets:
    get:
      tags:
        - Asset Management
      summary: Retrieve all assets
      description: Retrieve the information of all assets.
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/range'
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
    post:
      summary: Create new asset
      tags:
        - Asset Management
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '400':
          description: Missing Required Information
      x-stoplight:
        id: xk3th6kh2xaea
      description: Creates a new asset.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetCreate'
  '/assets/{id}':
    get:
      tags:
        - Asset Management
      summary: Retrieve asset by id
      description: Retrieve the information of the asset with the matching asset ID.
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      x-stoplight:
        id: 2zks0jok3godg
    put:
      summary: Update asset by id
      tags:
        - Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      x-stoplight:
        id: y45hktoao8x1p
      description: Updates the asset with the given id.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
    delete:
      summary: Delete asset by id
      description: Deletes the asset with the given id.
      tags:
        - Asset Management
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      x-stoplight:
        id: qzbqf3cyubxfh
    parameters:
      - $ref: '#/components/parameters/id'
  /channels:
    get:
      tags:
        - Channel Management
      summary: Retrieve all channels
      description: Retrieve the information of all channels.
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/range'
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
    post:
      summary: Create new channel
      tags:
        - Channel Management
      responses:
        '200':
          description: OK
        '400':
          description: Missing Required Information
      x-stoplight:
        id: 7kb6p8nsmdmcz
      description: Create a new channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCreate'
  '/channels/{id}':
    get:
      tags:
        - Channel Management
      summary: Retrieve channel by id
      description: Retrieve the information of the channel with the matching channel ID.
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      x-stoplight:
        id: n2y8xwoqwy42p
    put:
      tags:
        - Channel Management
      x-stoplight:
        id: ecf6d452243db
      summary: Update channel by key
      description: Updates the channel with the specified id.
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Channel Management
      summary: Delete channel by key
      description: Delete a channel with the specified ID.
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      x-stoplight:
        id: 1tecqsp0tdwoy
  '/config/{key}':
    get:
      tags:
        - Configuration Management
      summary: Retrieve config by key
      description: Retrieve the config item with the specified key.
      parameters:
        - $ref: '#/components/parameters/key'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
    put:
      tags:
        - Configuration Management
      x-stoplight:
        id: 90bb04de57693
      summary: Update config by key
      description: Set a config item with the specified key.
      parameters:
        - $ref: '#/components/parameters/key'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Configuration Management
      summary: Delete config by key
      description: Delete a config item with the specified key.
      parameters:
        - $ref: '#/components/parameters/key'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /downloads:
    get:
      tags:
        - Downloads Management
      summary: Retrieve all downloads
      description: Retrieve the information of all downloads.
      parameters:
        - name: limit
          in: query
          description: Limit the number of downloads returned
          required: false
          schema:
            type: integer
            default: 100
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/range'
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Download'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
    post:
      tags:
        - Downloads Management
      summary: Start new downloads
      description: Initiates new downloads.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - source_url
                properties:
                  source_url:
                    type: string
                    format: uri
                    description: The URL of the file to download.
                  file_name:
                    type: string
                    description: The optional filename for the downloaded file.
                  target_directory:
                    type: string
                    description: The optional target directory for the downloaded file (default is 'downloads').
                  file_hash:
                    type: string
                    description: 'The hash type and hash of the file separated by colon (e.g., md5, sha256).'
                    example: 'sha256:db32e79624c8f2627b051e46de7007a556a43c3e8ddf573214eab5d4fdabdadf'
                    nullable: true
      responses:
        '200':
          description: Downloads started
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
        '400':
          description: Invalid request
  '/downloads/{id}':
    delete:
      tags:
        - Downloads Management
      summary: Delete download
      description: Deletes the download with the specified ID and removes the file.
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No Content
        '404':
          description: Download Not Found
      x-stoplight:
        id: dduck5g3v903s
  '/downloads/{id}/pause':
    post:
      tags:
        - Downloads Management
      summary: Pause download
      description: Pauses the download with the specified ID.
      operationId: backend.api.DownloadsView.pause
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Download paused
      x-stoplight:
        id: jfzldt7n6zi4y
  '/downloads/{id}/resume':
    post:
      tags:
        - Downloads Management
      summary: Resume download
      description: Resumes the download with the specified ID.
      operationId: backend.api.DownloadsView.resume
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Download resumed
      x-stoplight:
        id: rwumyu04mqxrw
  /users:
    get:
      tags:
        - User Management
      summary: Retrieve all users
      description: Get all users.
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/range'
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          headers:
            X-Total-Count:
              $ref: '#/components/headers/X-Total-Count'
    post:
      tags:
        - User Management
      x-stoplight:
        id: 529fe234619a5
      summary: Create new user
      description: Create a new user.
      requestBody:
        description: Post the necessary fields for the API to create a new user.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
  '/users/{id}':
    get:
      tags:
        - User Management
      summary: Retrieve user by id
      description: Retrieve the information of the user with the matching user ID.
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User Not Found
      x-stoplight:
        id: 1ghm6r4v82ch1
    delete:
      tags:
        - User Management
      summary: Delete user by id
      description: Delete the user with the specified id
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      x-stoplight:
        id: g3lg9dif14k5r
    put:
      tags:
        - User Management
      summary: Update user
      description: Update the information of an existing user.
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: User to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      x-stoplight:
        id: 2fpaptklpmtue
tags:
  - name: Abilities Management
    description: Installation and configuration of abilities
  - name: Asset Management
    description: Management of assets
  - name: Channel Management
    description: Discovery and configuration of input/output interfaces/channels
  - name: Configuration Management
    description: Management of configuration
  - name: Downloads Management
    description: Management of downloads
  - name: User Management
    description: Management of user accounts
components:
  headers:
    X-Total-Count:
      description: The total number of items
      schema:
        type: integer
      required: true
  parameters:
    id:
      name: id
      in: path
      description: id of the object
      required: true
      schema:
        $ref: '#/components/schemas/uuid4'
    abilityId:
      name: id
      in: path
      description: id of the ability
      required: true
      schema:
        type: string
        example: llama_cpp
        pattern: '^[a-z0-9]+(_[a-z0-9]+)*$'
    dependencyId:
      name: dependency_id
      in: path
      description: id of the dependency
      required: true
      schema:
        type: string
        example: fetch_llama_cpp
        pattern: '^[a-z0-9]+(_[a-z0-9]+)*$'
    key:
      name: key
      in: path
      description: key for config item
      required: true
      schema:
        type: string
        example: api_key
        pattern: '^[a-zA-Z0-9_]+$'
    versionOptional:
      name: version
      in: query
      description: Semantic version of the object
      required: false
      schema:
        $ref: '#/components/schemas/semVer'
    versionRequired:
      name: version
      in: query
      description: Semantic version of the object
      required: true
      schema:
        $ref: '#/components/schemas/semVer'
    sort:
      name: sort
      in: query
      description: 'Specifies the sorting order and field (e.g., ["title", "ASC"]).'
      required: false
      schema:
        type: string
        example: '["title","ASC"]'
    range:
      name: range
      in: query
      description: 'Specifies the range of results to return (e.g., [0, 24]).'
      required: false
      schema:
        type: string
        example: '[0, 24]'
    filter:
      name: filter
      in: query
      description: 'JSON string specifying the filter conditions (e.g., {"title":"bar"}).'
      required: false
      schema:
        type: string
        example: '{"title":"bar"}'
  schemas:
    semVer:
      type: string
      example: '1.1.0'
      pattern: '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$'
    uuid4:
      type: string
      format: uuid
      example: 7bea4732-214f-40e7-9161-4e7241a2b97e
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
    uuid4ReadOnly:
      type: string
      format: uuid
      readOnly: true
      example: 7bea4732-214f-40e7-9161-4e7241a2b97e
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
    uri:
      type: string
      format: uri
      example: 'https://localhost:8080/v1/api'
      pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$
    email:
      type: string
      format: email
      example: contact@kwaai.ai
      pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
    name:
      type: string
      example: Kwaai
      pattern: ^[A-Za-z0-9\s\-_,.;:()!@#$%&*+=?\/\\|~^'"\[\]{}áéíóúñ©€£¥]+$
    textShort:
      type: string
      example: Lorem Ipsum
      pattern: ^[A-Za-z0-9\s\-_,.;:()!@#$%&*+=?\/\\|~^'"\[\]{}áéíóúñ©€£¥]+$
    textLong:
      type: string
      example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
      pattern: ^[A-Za-z0-9\s\-_,.;:()!@#$%&*+=?\/\\|~^'"\[\]{}áéíóúñ©€£¥]+$
    Ability:
      type: object
      title: Ability
      description: Additional abilities (plug-ins)
      properties:
        id:
          type: string
          minLength: 2
          maxLength: 100
          example: optical_character_recognition
          pattern: ^[a-z0-9]+(_[a-z0-9]+)*$
        name:
          $ref: '#/components/schemas/name'
        description:
          $ref: '#/components/schemas/textLong'
        versions:
          type: object
          properties:
            package:
              $ref: '#/components/schemas/semVer'
            product:
              type: string
              example: '0.2beta3'
              pattern: ^\d+(\.\d+)*([a-zA-Z0-9]+)?$|^[rb]\d+$|^\d+:\d+(\.\d+)*-\d+[a-zA-Z0-9]+
            latest:
              $ref: '#/components/schemas/semVer'
            installed:
              type: string
              example: '0.1.0'
              pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$
              nullable: true
            available:
              type: array
              items:
                $ref: '#/components/schemas/semVer'
              uniqueItems: true
              example:
                - '0.1.0'
                - '0.2.0'
        author:
          type: object
          properties:
            name:
              $ref: '#/components/schemas/name'
            url:
              $ref: '#/components/schemas/uri'
        maintainer:
          type: object
          properties:
            name:
              $ref: '#/components/schemas/name'
            email:
              $ref: '#/components/schemas/email'
            url:
              $ref: '#/components/schemas/uri'
        language:
          type: string
          example: python
        scripts:
          type: object
          properties:
            start:
              type: string
              example: chroma run
        license:
          type: string
          example: MIT
        dependencies:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: python
              id:
                type: string
                example: airllm
              name:
                type: string
                example: AirLLM
              version:
                type: string
                example: '>=2.8'
          x-stoplight:
            id: 97skm0furiybt
    Asset:
      type: object
      title: Asset
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        user_id:
          $ref: '#/components/schemas/uuid4'
        title:
          $ref: '#/components/schemas/textShort'
        creator:
          $ref: '#/components/schemas/name'
        subject:
          $ref: '#/components/schemas/textShort'
        description:
          $ref: '#/components/schemas/textLong'
      required:
        - id
        - title
    AssetCreate:
      type: object
      title: AssetCreate
      description: Asset without id which is server-generated.
      properties:
        user_id:
          $ref: '#/components/schemas/uuid4'
        title:
          $ref: '#/components/schemas/textShort'
        creator:
          $ref: '#/components/schemas/name'
        subject:
          $ref: '#/components/schemas/textShort'
        description:
          $ref: '#/components/schemas/textShort'
      required:
        - title
    Channel:
      type: object
      title: Channel
      description: Channels (input/output)
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        name:
          $ref: '#/components/schemas/name'
        uri:
          $ref: '#/components/schemas/uri'
      required:
        - id
        - name
        - uri
    ChannelCreate:
      type: object
      title: Channel
      description: Channels (input/output)
      properties:
        name:
          $ref: '#/components/schemas/name'
        uri:
          $ref: '#/components/schemas/uri'
      required:
        - name
        - uri
    Config:
      title: Config
      type: object
      properties:
        key:
          type: string
          description: key for the config item.
          example: api_key
          pattern: '^[a-zA-Z0-9_]+$'
        value:
          anyOf:
            - type: string
              example: api-pk-1aEN2XGPUEKxMCcTsUZXFVEUu9GbtAjTEVc16dZBVxjfHeZACKO86vTRX
            - type: boolean
            - type: integer
            - type: number
            - type: object
            - type: array
              items:
                oneOf:
                  - type: string
                  - type: number
                  - type: boolean
                  - type: object
      required:
        - key
        - value
    Download:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        source_url:
          $ref: '#/components/schemas/uri'
        file_name:
          type: string
          nullable: true
          example: ubuntu-24.04-desktop-amd64.iso
        target_directory:
          type: string
          nullable: true
          example: abilities/virtual-machine/isos
        file_hash:
          type: string
          description: The hash type and hash of the file separated by colon
          example: 'sha256:db32e79624c8f2627b051e46de7007a556a43c3e8ddf573214eab5d4fdabdadf'
          pattern: ^[a-z0-9]+:[a-f0-9]{1,128}$
        file_size:
          type: integer
          nullable: true
          example: 6114656256
        downloaded:
          type: integer
          nullable: true
          example: 614252544
        progress:
          type: number
          nullable: true
          example: 10.05
        status:
          type: string
          enum:
            - downloading
            - paused
            - processing
            - completed
            - verified
            - failed
          example: downloading
        start_time:
          type: number
          nullable: true
          example: 1717398019.4677122
        transfer_rate:
          type: number
          nullable: true
          example: 49028995.95526451
      required:
        - id
        - source_url
    User:
      type: object
      title: User
      description: User of the system
      properties:
        id:
          $ref: '#/components/schemas/uuid4ReadOnly'
        name:
          $ref: '#/components/schemas/name'
        email:
          $ref: '#/components/schemas/email'
      required:
        - id
        - name
        - email
    UserCreate:
      type: object
      title: User
      description: User of the system
      properties:
        name:
          $ref: '#/components/schemas/name'
        email:
          $ref: '#/components/schemas/email'
      required:
        - name
        - email
