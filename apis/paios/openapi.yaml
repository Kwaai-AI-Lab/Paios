openapi: 3.0.3
info:
  version: '0.1'
  title: Kwaai pAI-OS API
  description: 'API for pAI-OS admin interfaces (web, app) to backend services.'
  termsOfService: 'https://paios.org'
  contact:
    name: Kwaai
    url: 'https://www.kwaai.ai'
    email: contact@kwaai.ai
  license:
    url: 'https://github.com/pAI-OS/paios/blob/main/LICENSE'
    name: MIT
servers:
  - url: /api/v1
    description: Local instance
paths:
  /abilities:
    get:
      tags:
        - Abilities Management
      summary: Retrieve all abilities
      description: Retrieve the information of all abilities.
      parameters:
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ability'
          headers:
            X-Total-Count:
              schema:
                type: string
                example: '2'
              description: Count of results required by jsonServer Data Provider for pagination
  '/abilities/{id}':
    get:
      tags:
        - Abilities Management
      summary: Retrieve ability by id
      description: Retrieve the information of the ability with the matching ability ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ability'
      x-stoplight:
        id: dyrvaak9tni3i
    parameters:
      - schema:
          type: string
        name: id
        description: id of the ability
        in: path
        required: true
  '/abilities/{id}/install':
    post:
      tags:
        - Abilities Management
      summary: Install ability
      description: Installs the ability with the matching ability ID and an optional version.
      operationId: backend.api.AbilitiesView.install
      parameters:
        - name: id
          in: path
          description: ID of the ability
          required: true
          schema:
            type: string
        - name: version
          in: query
          description: Version of the ability to install (optional)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Ability installed
        '400':
          description: Invalid request
        '404':
          description: Ability not found
  '/abilities/{id}/start':
    post:
      tags:
        - Abilities Management
      summary: Start ability
      description: Starts the ability with the matching ability ID.
      responses:
        '200':
          description: OK
      x-stoplight:
        id: oymowererbmk1
    parameters:
      - schema:
          type: string
        name: id
        description: id of an existing ability
        in: path
        required: true
  '/abilities/{id}/stop':
    post:
      tags:
        - Abilities Management
      summary: Stop ability
      description: Stops the ability with the matching ability ID.
      responses:
        '200':
          description: OK
      x-stoplight:
        id: rl7akdqs5zokh
    parameters:
      - schema:
          type: string
        name: id
        description: id of an existing ability
        in: path
        required: true
  '/abilities/{id}/dependencies/{dependency_id}/download':
    post:
      tags:
        - Abilities Management
      summary: Start download
      description: Downloads an ability's dependency.
      responses:
        '200':
          description: Download started
      x-stoplight:
        id: xngy10ictavd9
    parameters:
      - schema:
          type: string
        name: id
        description: id of the ability
        in: path
        required: true
      - schema:
          type: string
        name: dependency_id
        description: id of a dependency
        in: path
        required: true
  '/abilities/{id}/dependencies/{dependency_id}/install':
    post:
      tags:
        - Abilities Management
      summary: Start dependency install
      description: Installs an ability's dependency.
      responses:
        '200':
          description: Install started
      x-stoplight:
        id: s0cmunju1qpd7
    parameters:
      - schema:
          type: string
        name: id
        description: id of the ability
        in: path
        required: true
      - schema:
          type: string
        name: dependency_id
        description: id of the dependency
        in: path
        required: true
  /assets:
    get:
      tags:
        - Asset Management
      summary: Retrieve all assets
      description: Retrieve the information of all assets.
      parameters:
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
          headers:
            X-Total-Count:
              schema:
                type: string
                example: '2'
              description: Count of results required by jsonServer Data Provider for pagination
    post:
      summary: Create new asset
      tags:
        - Asset Management
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '400':
          description: Missing Required Information
      x-stoplight:
        id: xk3th6kh2xaea
      description: Creates a new asset.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                user_id:
                  type: string
                  x-stoplight:
                    id: tcrecsxwclhod
                title:
                  type: string
                  x-stoplight:
                    id: ewm2l63kcoemr
                creator:
                  type: string
                  x-stoplight:
                    id: z31hnyze67lcw
                subject:
                  type: string
                  x-stoplight:
                    id: wpa1675fg6r1s
                description:
                  type: string
                  x-stoplight:
                    id: fth78lwtn3nw3
  '/assets/{id}':
    get:
      tags:
        - Asset Management
      summary: Retrieve asset by id
      description: Retrieve the information of the asset with the matching asset ID.
      parameters:
        - name: id
          in: path
          description: Id of an existing asset.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      x-stoplight:
        id: 2zks0jok3godg
    put:
      summary: Update asset by id
      tags:
        - Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      x-stoplight:
        id: y45hktoao8x1p
      description: Updates the asset with the given id.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
    delete:
      summary: Delete asset by id
      description: Deletes the asset with the specified id.
      tags:
        - Asset Management
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      x-stoplight:
        id: qzbqf3cyubxfh
    parameters:
      - schema:
          type: string
        name: id
        description: id of an existing asset.
        in: path
        required: true
  /channels:
    get:
      tags:
        - Channel Management
      summary: Retrieve all channels
      description: Retrieve the information of all channels.
      parameters:
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
          headers:
            X-Total-Count:
              schema:
                type: string
                example: '2'
              description: Count of results required by jsonServer Data Provider for pagination
    post:
      summary: Create new channel
      tags:
        - Channel Management
      responses:
        '200':
          description: OK
        '400':
          description: Missing Required Information
      x-stoplight:
        id: 7kb6p8nsmdmcz
      description: Create a new channel.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
  '/channels/{channel_id}':
    get:
      tags:
        - Channel Management
      summary: Retrieve channel by id
      description: Retrieve the information of the channel with the matching channel ID.
      parameters:
        - name: channel_id
          in: path
          description: ID of an existing channel
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      x-stoplight:
        id: n2y8xwoqwy42p
    put:
      tags:
        - Channel Management
      x-stoplight:
        id: ecf6d452243db
      summary: Update channel by key
      description: Updates the channel with the specified id.
      parameters:
        - name: channel_id
          in: path
          description: ID of channel
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Channel Management
      summary: Delete channel by key
      description: Delete a channel with the specified ID.
      parameters:
        - name: channel_id
          in: path
          description: ID of channel
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      x-stoplight:
        id: 1tecqsp0tdwoy
  '/config/{key}':
    get:
      tags:
        - Configuration Management
      summary: Retrieve config by key
      description: Retrieve the config item with the specified key.
      parameters:
        - name: key
          in: path
          description: Key for Config item
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
    put:
      tags:
        - Configuration Management
      x-stoplight:
        id: 90bb04de57693
      summary: Update config by key
      description: Set a config item with the specified key.
      parameters:
        - name: key
          in: path
          description: Key for Config item
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Configuration Management
      summary: Delete config by key
      description: Delete a config item with the specified key.
      parameters:
        - name: key
          in: path
          description: Key for Config item
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /downloads:
    get:
      tags:
        - Downloads Management
      summary: Retrieve all downloads
      description: Retrieve the information of all downloads.
      parameters:
        - name: limit
          in: query
          description: Limit the number of downloads returned
          required: false
          schema:
            type: integer
            default: 100
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Download'
          headers:
            X-Total-Count:
              schema:
                type: string
                example: '2'
              description: Count of results required by jsonServer Data Provider for pagination
    post:
      tags:
        - Downloads Management
      summary: Start new downloads
      description: Initiates new downloads.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - source_url
                properties:
                  source_url:
                    type: string
                    description: The URL of the file to download.
                  file_name:
                    type: string
                    description: The optional filename for the downloaded file.
                  target_directory:
                    type: string
                    description: The optional target directory for the downloaded file (default is 'downloads').
                  file_hash:
                    type: string
                    description: 'The hash type and hash of the file separated by colon (e.g., md5, sha256).'
                    example: 'sha256:db32e79624c8f2627b051e46de7007a556a43c3e8ddf573214eab5d4fdabdadf'
                    nullable: true
      responses:
        '200':
          description: Downloads started
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
        '400':
          description: Invalid request
  '/downloads/{id}':
    delete:
      tags:
        - Downloads Management
      summary: Delete download
      description: Deletes the download with the specified ID and removes the file.
      parameters:
        - name: id
          in: path
          description: ID of the download
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Download Not Found
      x-stoplight:
        id: dduck5g3v903s
  '/downloads/{id}/pause':
    post:
      tags:
        - Downloads Management
      summary: Pause download
      description: Pauses the download with the specified ID.
      operationId: backend.api.DownloadsView.pause
      parameters:
        - name: id
          in: path
          description: ID of the download
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Download paused
      x-stoplight:
        id: jfzldt7n6zi4y
  '/downloads/{id}/resume':
    post:
      tags:
        - Downloads Management
      summary: Resume download
      description: Resumes the download with the specified ID.
      operationId: backend.api.DownloadsView.resume
      parameters:
        - name: id
          in: path
          description: ID of the download
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Download resumed
      x-stoplight:
        id: rwumyu04mqxrw
  /users:
    get:
      tags:
        - User Management
      summary: Retrieve all users
      description: Get all users.
      parameters:
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Range'
        - $ref: '#/components/parameters/Filter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          headers:
            X-Total-Count:
              schema:
                type: integer
                example: 2
              description: Count of results required by jsonServer Data Provider for pagination
    post:
      tags:
        - User Management
      x-stoplight:
        id: 529fe234619a5
      summary: Create new user
      description: Create a new user.
      requestBody:
        description: Post the necessary fields for the API to create a new user.
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: User Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
  '/users/{id}':
    get:
      tags:
        - User Management
      summary: Retrieve user by id
      description: Retrieve the information of the user with the matching user ID.
      parameters:
        - name: id
          in: path
          description: UUID of user
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User Not Found
      x-stoplight:
        id: 1ghm6r4v82ch1
    delete:
      tags:
        - User Management
      summary: Delete user by id
      description: Delete the user with the specified ID
      parameters:
        - name: id
          in: path
          description: UUID of user
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      x-stoplight:
        id: g3lg9dif14k5r
    put:
      tags:
        - User Management
      summary: Update user
      description: Update the information of an existing user.
      parameters:
        - name: id
          in: path
          description: id of user
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: User to update.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
            examples:
              Update Name:
                value:
                  name: Rebecca Baker
              Update Email:
                value:
                  email: rebecca.baker@example.com
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      x-stoplight:
        id: 2fpaptklpmtue
tags:
  - name: Abilities Management
    description: Installation and configuration of abilities
  - name: Asset Management
    description: Management of assets
  - name: Channel Management
    description: Discovery and configuration of input/output interfaces/channels
  - name: Configuration Management
    description: Management of configuration
  - name: Downloads Management
    description: Management of downloads
  - name: User Management
    description: Management of user accounts
components:
  parameters:
    Sort:
      name: sort
      in: query
      description: 'Specifies the sorting order and field (e.g., ["title", "ASC"]).'
      required: false
      schema:
        type: string
        example: '["title","ASC"]'
    Range:
      name: range
      in: query
      description: 'Specifies the range of results to return (e.g., [0, 24]).'
      required: false
      schema:
        type: string
        example: '[0, 24]'
    Filter:
      name: filter
      in: query
      description: 'JSON string specifying the filter conditions (e.g., {"title":"bar"}).'
      required: false
      schema:
        type: string
        example: '{"title":"bar"}'
  schemas:
    Ability:
      type: object
      title: Ability
      description: Additional abilities (plug-ins)
      properties:
        id:
          type: string
          pattern: '^[a-z0-9-]+'
          minLength: 2
          maxLength: 100
          example: optical-character-recognition
        name:
          type: string
          example: Optical Character Recognition
        description:
          type: string
          example: Conversion of images to text
        versions:
          type: object
          properties:
            package:
              type: string
              example: '0.1.0'
            product:
              type: string
              example: '0.2'
            latest:
              type: string
              example: '0.1.1'
            installed:
              type: string
              example: '0.1.0'
              nullable: true
            available:
              type: array
              items:
                type: string
              example: ['0.1.0', '0.2.0']
        author:
          type: object
          properties:
            name:
              type: string
            url:
              type: string
        maintainer:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            url:
              type: string
        language:
          type: string
        scripts:
          type: object
          properties:
            start:
              type: string
        license:
          type: string
        dependencies:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: python
              id:
                type: string
                example: airllm
              name:
                type: string
                example: AirLLM
              version:
                type: string
                example: '>=2.8'
          x-stoplight:
            id: 97skm0furiybt
        installed_version:
          type: string
          nullable: true
    Asset:
      type: object
      title: Asset
      properties:
        id:
          type: string
          format: uuid
          example: abf83ff3-3b8c-4e52-b378-4a6ad4aca448
        user_id:
          type: string
          format: uuid
          example: a9cab4c3-65d3-4871-83b9-165b2e9d5947
          nullable: true
        title:
          type: string
          example: Attention Is All You Need
        creator:
          type: string
          example: Ashish Vaswani et al
          nullable: true
        subject:
          type: string
          example: Artificial Intelligence
          nullable: true
        description:
          type: string
          example: 'We propose a new simple network architecture, the Transformer...'
          nullable: true
    Channel:
      type: object
      title: Channel
      description: Channels (input/output)
      properties:
        id:
          type: string
          example: llm-api
        name:
          type: string
          example: LLM API
        uri:
          type: string
          example: 'https://localhost:8080/v1/api'
    Config:
      title: Config
      type: object
      properties:
        key:
          type: string
          description: The key for the config item.
          example: example_key
        value:
          anyOf:
            - type: boolean
            - type: integer
            - type: number
            - type: string
            - type: object
            - type: array
              items:
                oneOf:
                  - type: string
                  - type: number
                  - type: boolean
                  - type: object
      required:
        - key
        - value
    Download:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the given download.
          format: uuid
          example: e2b55b15-4080-41b2-bbbf-cbac0a282880
        source_url:
          type: string
          example: 'https://releases.ubuntu.com/24.04/ubuntu-24.04-desktop-amd64.iso'
        file_name:
          type: string
          nullable: true
          example: ubuntu-24.04-desktop-amd64.iso
        target_directory:
          type: string
          nullable: true
          example: abilities/virtual-machine/isos
        file_hash:
          type: string
          description: The hash type and hash of the file separated by colon
          example: 'sha256:db32e79624c8f2627b051e46de7007a556a43c3e8ddf573214eab5d4fdabdadf'
        file_size:
          type: integer
          nullable: true
          example: 6114656256
        downloaded:
          type: integer
          nullable: true
          example: 614252544
        progress:
          type: number
          nullable: true
          example: 10.05
        status:
          type: string
          enum:
            - downloading
            - paused
            - processing
            - completed
            - verified
            - failed
          example: downloading
        start_time:
          type: number
          nullable: true
          example: 1717398019.4677122
        transfer_rate:
          type: number
          nullable: true
          example: 49028995.95526451
      required:
        - id
        - source_url
    User:
      type: object
      title: User
      description: pAI-OS users
      properties:
        id:
          type: string
          description: Unique identifier for the given user.
          format: uuid
          example: 7ea85f9e-0c5f-450c-9b6d-3cb7a42f5242
        name:
          type: string
          example: Sally Smith
        email:
          type: string
          format: email
          example: sally.smith@example.com
      required:
        - id
        - name
        - email
